# ===== MAKEFILE =====

# Makefile
.PHONY: help setup build start stop restart logs test clean deploy backup restore

# Variables
ENV ?= development
SERVICE ?= 

help: ## Affiche cette aide
	@grep -E '^[a-zA-Z_-]+:.*?## .*$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $1, $2}'

setup: ## Configuration initiale du projet
	@./scripts/setup.sh

build: ## Construction des images Docker
	@echo "ðŸ”¨ Construction des images..."
	@docker-compose build

start: ## DÃ©marrage des services
	@echo "ðŸš€ DÃ©marrage des services..."
	@docker-compose up -d
	@echo "âœ… Services dÃ©marrÃ©s"

stop: ## ArrÃªt des services
	@echo "ðŸ›‘ ArrÃªt des services..."
	@docker-compose down
	@echo "âœ… Services arrÃªtÃ©s"

restart: stop start ## RedÃ©marrage des services

logs: ## Affichage des logs
	@./scripts/logs.sh $(SERVICE)

test: ## ExÃ©cution des tests
	@./scripts/test.sh

integration-test: ## Tests d'intÃ©gration
	@./scripts/integration-tests.sh

performance-test: ## Tests de performance
	@./scripts/performance-test.sh

health: ## VÃ©rification de la santÃ© des services
	@./scripts/health-check.sh

monitor: ## Monitoring en temps rÃ©el
	@./scripts/monitoring.sh

clean: ## Nettoyage du systÃ¨me
	@./scripts/cleanup.sh

deploy: ## DÃ©ploiement (usage: make deploy ENV=staging)
	@./scripts/deploy.sh $(ENV)

backup: ## Sauvegarde de la base de donnÃ©es
	@./scripts/backup-db.sh

restore: ## Restauration de la base de donnÃ©es (usage: make restore BACKUP=file.sql.gz)
	@./scripts/restore-db.sh $(BACKUP)

dev-backend: ## DÃ©veloppement backend uniquement
	@cd backend && uvicorn main:app --reload --host 0.0.0.0 --port 8000

dev-frontend: ## DÃ©veloppement frontend uniquement
	@cd frontend && npm run dev

install-backend: ## Installation des dÃ©pendances backend
	@cd backend && pip install -r requirements.txt

install-frontend: ## Installation des dÃ©pendances frontend
	@cd frontend && npm install

format-backend: ## Formatage du code backend
	@cd backend && black . && isort .

format-frontend: ## Formatage du code frontend
	@cd frontend && npm run format

lint-backend: ## Linting du code backend
	@cd backend && flake8 . && mypy .

lint-frontend: ## Linting du code frontend
	@cd frontend && npm run lint

